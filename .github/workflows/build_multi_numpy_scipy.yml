name: Build-Test-Multi-Scipy-Numpy
on:
  push:
    branches: [release]
  pull_request:
    branches: [master, release]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release' }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        numpy: ['2.0.1'] #['1.16.5', '1.18.5', '1.20.3', '1.22.4', '1.24.4', '1.26.4', '2.0.1']
        scipy: ['1.14.0'] #['1.7.3', '1.8.1', '1.9.3', '1.10.1', '1.12.0', '1.14.0']
        python-version: ['3.10'] #['3.9', '3.10']
        os: [ubuntu-latest]
        architecture: ['x64']
        include:
          - numpy: '1.24.4'
            scipy: '1.9.3'
            python-version: '3.10'
          - numpy: '1.24.4'
            scipy: '1.12.0'
            python-version: '3.9'
          - numpy: '1.26.4'
            scipy: '1.10.1'
            python-version: '3.9'
          - numpy: '1.26.4'
            scipy: '1.12.0'
            python-version: '3.9'
          - numpy: '1.26.4'
            scipy: '1.14.0'
            python-version: '3.10'
          - numpy: '2.0.1'
            scipy: '1.14.0'
            python-version: '3.10'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.architecture }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    - name: Install Ubuntu dependencies
      if: startsWith(runner.os, 'Linux')
      run: |
        # Taken from scipy
        sudo apt-get update
        sudo apt-get install -y libopenblas-dev libatlas-base-dev liblapack-dev gfortran libgmp-dev libmpfr-dev libsuitesparse-dev ccache libmpc-dev
    
    - name: Install dependencies
      run: |
        python -c "import platform; print(platform.platform()); print(platform.architecture())"
        uv pip install --system -e .[test]
        uv pip install --system numpy==${{ matrix.numpy }} scipy==${{ matrix.scipy }}
    - name: Add numba
      if: ${{ !contains(fromJSON('["pypy3.9"]'), matrix.python-version) }}
      run: |
        uv pip install --system -e .[numba]
    - name: Test with pytest
      run: |
        pytest . -v --cov-report html --cov=fluids --cov-report term-missing -m "not online and not thermo and not numba"
        coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.coveralls }}
        COVERALLS_PARALLEL: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload coverage HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html-numpy-${{ matrix.numpy }}-scipy-${{ matrix.scipy }}-py${{ matrix.python-version }}
        path: htmlcov/
  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.coveralls }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl https://coveralls.io/webhook?repo_token=${{ secrets.coveralls }} -d "payload[build_num]=${{ github.sha }}&payload[status]=done"